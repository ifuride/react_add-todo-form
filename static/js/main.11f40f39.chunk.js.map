{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","setUser","todoList","setTodoList","hasTitleError","setTitleError","hasUserError","setUserError","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11f40f39.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [todoList, setTodoList] = useState(todos);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+event.target.value);\n    setUserError(false);\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (trimmedTitle && user) {\n      const newTodo = {\n        id: Math.max(...todoList.map((todo) => todo.id)) + 1,\n        title: trimmedTitle,\n        completed: false,\n        userId: user,\n        user: getUser(user),\n      };\n\n      setTodoList([...todoList, newTodo]);\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"itemId\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleInput}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"itemId\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(item => (\n              <option value={item.id} key={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}